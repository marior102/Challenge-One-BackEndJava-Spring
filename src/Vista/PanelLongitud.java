/*
 * clase PanelMultiplicarMatrices la cual sera la vista principal de esta seccion en la cual
 * podran realizar operaciones tales como: multiplicar un Matriz A por una Matriz B
 */
package Programa;


import javax.swing.JTextField;
import javax.swing.JPanel;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.text.DecimalFormat;
import java.awt.Color;
import javax.swing.border.EmptyBorder;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

import java.awt.Font;
import javax.swing.JComboBox;
import javax.swing.SwingConstants;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JButton;

/**
 *
 * @author SOFTWARE GALAXIA
 */
public class PanelLongitud extends javax.swing.JPanel {
 
    //Creamos el objeto de nuestra clase controlador
   
    
    /*Creamos tres arreglos bidimensionales de tipo JTextField los cuales haran referencia
    a las matrices que trabajaremos */    
    public JTextField [][] JmatrizA, JmatrizB, JmatrizC; 
    
    private JPanel contentPanel;
    private JLabel lblConvertirUnidadDe;
    private JLabel lblUnidad;
    private JLabel lblUnidad_1;
    private JComboBox cmbUnidad1;
    private JComboBox cmbUnidad2;
    private JLabel lblCantidad;
    private JTextField txtCantidad;
    private JLabel lblResultado;
    private JTextField txtResultado;
    private JButton btnLimpiar;
    private JButton btnConvertir;
    private JLabel lblImagen;
    private JLabel lblflecha;
    String unidad1, unidad2;
	double cantidadEscrita;
	DecimalFormat formatea;
    
    
    public PanelLongitud() {
        
        initComponents();
        
        formatea = new DecimalFormat("###,###.##");
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        setBackground(new java.awt.Color(255, 255, 255));
        GridBagLayout gridBagLayout = new GridBagLayout();
        gridBagLayout.rowWeights = new double[]{1.0};
        gridBagLayout.columnWeights = new double[]{1.0};
        setLayout(gridBagLayout);
        
        contentPanel = new JPanel();
        contentPanel.setLayout(null);
        contentPanel.setForeground(Color.WHITE);
        contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
        contentPanel.setBackground(Color.WHITE);
        GridBagConstraints gbc_contentPanel = new GridBagConstraints();
        gbc_contentPanel.fill = GridBagConstraints.BOTH;
        gbc_contentPanel.gridx = 0;
        gbc_contentPanel.gridy = 0;
        add(contentPanel, gbc_contentPanel);
        
        lblConvertirUnidadDe = new JLabel("CONVERTIR UNIDAD DE MEDIDA-LONGITUD");
        lblConvertirUnidadDe.setForeground(Color.BLACK);
        lblConvertirUnidadDe.setFont(new Font("Roboto Black", Font.BOLD, 17));
        lblConvertirUnidadDe.setBounds(10, 11, 444, 27);
        contentPanel.add(lblConvertirUnidadDe);
        
        lblUnidad = new JLabel("DE");
        lblUnidad.setFont(new Font("Roboto", Font.BOLD, 14));
        lblUnidad.setBounds(297, 59, 45, 28);
        contentPanel.add(lblUnidad);
        
        lblUnidad_1 = new JLabel("A");
        lblUnidad_1.setFont(new Font("Roboto", Font.BOLD, 14));
        lblUnidad_1.setBounds(484, 59, 45, 28);
        contentPanel.add(lblUnidad_1);
        
        cmbUnidad1 = new JComboBox();
        cmbUnidad1.setModel(new DefaultComboBoxModel(new String[] {"Kilometro", "Metro", "Milla", "Yarda", "Pie", "Pulgada", "MillaNautica"}));
        cmbUnidad1.setFont(new Font("Roboto Light", Font.PLAIN, 11));
        cmbUnidad1.setEditable(true);
        cmbUnidad1.setBorder(null);
        cmbUnidad1.setBackground(Color.WHITE);
        cmbUnidad1.setBounds(274, 91, 92, 40);
        contentPanel.add(cmbUnidad1);
        
        cmbUnidad2 = new JComboBox();
        cmbUnidad2.setFont(new Font("Roboto Light", Font.PLAIN, 11));
        cmbUnidad2.setModel(new DefaultComboBoxModel(new String[] {"Kilometro", "Metro", "Milla", "Yarda", "Pie", "Pulgada", "MillaNautica"}));
        cmbUnidad2.setEditable(true);
        cmbUnidad2.setBorder(null);
        cmbUnidad2.setBackground(new Color(220, 20, 60));
        cmbUnidad2.setBounds(452, 91, 92, 40);
        contentPanel.add(cmbUnidad2);
        
        lblCantidad = new JLabel("CANTIDAD");
        lblCantidad.setFont(new Font("Roboto", Font.BOLD, 14));
        lblCantidad.setBounds(274, 142, 119, 28);
        contentPanel.add(lblCantidad);
        
        txtCantidad = new JTextField();
        txtCantidad.addKeyListener(new KeyAdapter() {
			public void keyTyped(KeyEvent e) {
				char c = e.getKeyChar();
				if(!Character.isDigit(c) && c !='.') {
					e.consume();
					
					
					
				}
				if (c=='.' && txtCantidad.getText().contains(".")) {
					e.consume();
					JOptionPane.showMessageDialog(null, "No se puede agregar dos puntos decimales a un numero");
					
				}
			
			}
		});
        txtCantidad.setColumns(10);
        txtCantidad.setBounds(274, 181, 119, 40);
        contentPanel.add(txtCantidad);
        
        lblResultado = new JLabel("Resultado");
        lblResultado.setFont(new Font("Roboto", Font.BOLD, 14));
        lblResultado.setBounds(274, 235, 92, 28);
        contentPanel.add(lblResultado);
        
        txtResultado = new JTextField();
        txtResultado.setHorizontalAlignment(SwingConstants.CENTER);
        txtResultado.setForeground(new Color(240, 248, 255));
        txtResultado.setFont(new Font("Times New Roman", Font.BOLD, 16));
        txtResultado.setEditable(false);
        txtResultado.setColumns(10);
        txtResultado.setBorder(null);
        txtResultado.setBackground(new Color(220, 20, 60));
        txtResultado.setBounds(274, 274, 276, 40);
        contentPanel.add(txtResultado);
        
        btnLimpiar = new JButton("Limpiar");
        btnLimpiar.setIcon(new ImageIcon(getClass().getResource("/Imagenes/clean2.png")));
		btnLimpiar.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				txtCantidad.setText("");
				txtResultado.setText("");
				txtCantidad.requestFocus();
			}
		});
        btnLimpiar.setFont(new Font("Roboto Black", Font.BOLD | Font.ITALIC, 11));
        btnLimpiar.setBorder(null);
        btnLimpiar.setBackground(Color.WHITE);
        btnLimpiar.setBounds(291, 365, 119, 57);
        contentPanel.add(btnLimpiar);
        
        btnConvertir = new JButton("CONVERTIR");
        btnConvertir.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if (txtCantidad.getText().length() !=0) {
					double cantidad = Double.parseDouble(txtCantidad.getText());
						if(cantidad > 0) {
							unidad1 = cmbUnidad1.getSelectedItem().toString();
							unidad2 = cmbUnidad2.getSelectedItem().toString();
							calcularUnidad(unidad1, unidad2, cantidad);
						}else {
							JOptionPane.showMessageDialog(null, "No se puede calcular con un monto negativo");
							limpiar();
						}
						
				}else {
					JOptionPane.showMessageDialog(null, "No se puede calcular porque el monto esta vacio");
					limpiar();
				}
			}

			
		});
        btnConvertir.setForeground(new Color(245, 245, 220));
        btnConvertir.setFont(new Font("Roboto Black", Font.BOLD | Font.ITALIC, 11));
        btnConvertir.setBorder(null);
        btnConvertir.setBackground(new Color(220, 20, 60));
        btnConvertir.setBounds(431, 181, 119, 40);
        contentPanel.add(btnConvertir);
        
        lblImagen = new JLabel("");
        ImageIcon icoMon = new ImageIcon(getClass().getResource("/Imagenes/conversor-longitud.jpg"));
		ImageIcon imgMon = new ImageIcon(icoMon.getImage().getScaledInstance(255, 255, Image.SCALE_SMOOTH));
		lblImagen.setIcon(imgMon);
        lblImagen.setBorder(null);
        lblImagen.setBounds(10, 59, 256, 255);
        contentPanel.add(lblImagen);
        
        lblflecha = new JLabel("");
        ImageIcon ico = new ImageIcon(getClass().getResource("/Imagenes/FLECHA.png"));
		ImageIcon img = new ImageIcon(ico.getImage().getScaledInstance(62, 40, Image.SCALE_SMOOTH));
		lblflecha.setIcon(img);
        lblflecha.setFont(new Font("Roboto", Font.BOLD, 14));
        lblflecha.setBounds(376, 91, 62, 40);
        contentPanel.add(lblflecha);
    }
    private void calcularLongitud(String combo1, String combo2, double canti) {
    	unidad1= combo1;
		unidad2= combo2;
		cantidadEscrita= canti;
		//"Kilometro", "Metro", "Milla", "Yarda", "Pie", "Pulgada", "MillaNautica"
		if(unidad1.equals("Kilometro")) {
			switch (unidad2) {
			case "Metro":
				
				break;
			case "Milla":
				
				break;
			case "Yarda":
				
				break;
			case "Pie":
				
				break;
			case "Pulgada":
				
			default:
				break;
			}
		}
    }
    
    private void calcularUnidad(String combo1, String combo2, double canti) {
		unidad1= combo1;
		unidad2= combo2;
		cantidadEscrita= canti;
		//"Kilometro", "Metro", "Milla", "Yarda", "Pie", "Pulgada", "MillaNautica"
		
		//km a m
		
		if (unidad1 != unidad2) {
			if (unidad1.equalsIgnoreCase("Kilometro") && unidad2.equalsIgnoreCase("Metro")) {
				
				double resultado = cantidadEscrita*1000;
				//JOptionPane.showMessageDialog(null, "Es l");
				System.out.println("resultado " + resultado);
				txtResultado.setText(""+ formatea.format(resultado) + " mts");	
			}
			//m a km
			if (unidad1.equalsIgnoreCase("Metro") && unidad2.equalsIgnoreCase("Kilometro")) {
				
				double resultado = cantidadEscrita/1000;
				//JOptionPane.showMessageDialog(null, "Es l");
				System.out.println("resultado " + resultado);
				txtResultado.setText(""+ formatea.format(resultado) + " km");	
			}
			if (unidad1.equalsIgnoreCase("Kilometro") && unidad2.equalsIgnoreCase("Milla")) {
				
				double resultado = cantidadEscrita/1.609;
				//JOptionPane.showMessageDialog(null, "Es l");
				System.out.println("resultado " + resultado);
				txtResultado.setText(""+ formatea.format(resultado) + " mi");	
			}
			if (unidad1.equalsIgnoreCase("Milla") && unidad2.equalsIgnoreCase("Kilometro")) {
				
				double resultado = cantidadEscrita*1.609;
				//JOptionPane.showMessageDialog(null, "Es l");
				System.out.println("resultado " + resultado);
				txtResultado.setText(""+ formatea.format(resultado) + " km");	
			}
			if (unidad1.equalsIgnoreCase("Kilometro") && unidad2.equalsIgnoreCase("Yarda")) {
				
				double resultado = cantidadEscrita*1094;
				//JOptionPane.showMessageDialog(null, "Es l");
				System.out.println("resultado " + resultado);
				txtResultado.setText(""+ formatea.format(resultado) + " yd");	
			}
			if (unidad1.equalsIgnoreCase("Yarda") && unidad2.equalsIgnoreCase("Kilometro")) {
				
				double resultado = cantidadEscrita/1094;
				//JOptionPane.showMessageDialog(null, "Es l");
				System.out.println("resultado " + resultado);
				txtResultado.setText(""+ formatea.format(resultado) + " km");	
			}
			if (unidad1.equalsIgnoreCase("Kilometro") && unidad2.equalsIgnoreCase("Pie")) {
				
				double resultado = cantidadEscrita*3281;
				//JOptionPane.showMessageDialog(null, "Es l");
				System.out.println("resultado " + resultado);
				txtResultado.setText(""+ formatea.format(resultado) + " ft");	
			}
			if (unidad1.equalsIgnoreCase("Pie") && unidad2.equalsIgnoreCase("Kilometro")) {
				
				double resultado = cantidadEscrita/3281;
				//JOptionPane.showMessageDialog(null, "Es l");
				System.out.println("resultado " + resultado);
				txtResultado.setText(""+ formatea.format(resultado) + " km");	
			}
			if (unidad1.equalsIgnoreCase("Kilometro") && unidad2.equalsIgnoreCase("Pulgada")) {
				
				double resultado = cantidadEscrita*39370;
				//JOptionPane.showMessageDialog(null, "Es l");
				System.out.println("resultado " + resultado);
				txtResultado.setText(""+ formatea.format(resultado) + " in");	
			}
			if (unidad1.equalsIgnoreCase("Pulgada") && unidad2.equalsIgnoreCase("Kilometro")) {
				
				double resultado = cantidadEscrita/39370;
				//JOptionPane.showMessageDialog(null, "Es l");
				System.out.println("resultado " + resultado);
				txtResultado.setText(""+ formatea.format(resultado) + " km");	
			}
			if (unidad1.equalsIgnoreCase("Kilometro") && unidad2.equalsIgnoreCase("MillaNautica")) {
				
				double resultado = cantidadEscrita/1.852;
				//JOptionPane.showMessageDialog(null, "Es l");
				System.out.println("resultado " + resultado);
				txtResultado.setText(""+ formatea.format(resultado) + " km");	
			}
			if (unidad1.equalsIgnoreCase("MillaNautica") && unidad2.equalsIgnoreCase("Kilometro")) {
				
				double resultado = cantidadEscrita*1.852;
				//JOptionPane.showMessageDialog(null, "Es l");
				System.out.println("resultado " + resultado);
				txtResultado.setText(""+ formatea.format(resultado) + " nm");	
			}
			if (unidad1.equalsIgnoreCase("Metro") && unidad2.equalsIgnoreCase("Milla")) {
				
				double resultado = cantidadEscrita/1609;
				//JOptionPane.showMessageDialog(null, "Es l");
				System.out.println("resultado " + resultado);
				txtResultado.setText(""+ formatea.format(resultado) + " mi");	
			}
			if (unidad1.equalsIgnoreCase("Milla") && unidad2.equalsIgnoreCase("Metro")) {
				
				double resultado = cantidadEscrita*1609;
				//JOptionPane.showMessageDialog(null, "Es l");
				System.out.println("resultado " + resultado);
				txtResultado.setText(""+ formatea.format(resultado) + " mts");	
			}
			if (unidad1.equalsIgnoreCase("Metro") && unidad2.equalsIgnoreCase("Yarda")) {
				
				double resultado = cantidadEscrita*1.094;
				//JOptionPane.showMessageDialog(null, "Es l");
				System.out.println("resultado " + resultado);
				txtResultado.setText(""+ formatea.format(resultado) + " yd");	
			}
			if (unidad1.equalsIgnoreCase("Yarda") && unidad2.equalsIgnoreCase("Metro")) {
				
				double resultado = cantidadEscrita/1.094;
				//JOptionPane.showMessageDialog(null, "Es l");
				System.out.println("resultado " + resultado);
				txtResultado.setText(""+ formatea.format(resultado) + " mts");	
			}
			if (unidad1.equalsIgnoreCase("Metro") && unidad2.equalsIgnoreCase("Pie")) {
				
				double resultado = cantidadEscrita*3.281;
				//JOptionPane.showMessageDialog(null, "Es l");
				System.out.println("resultado " + resultado);
				txtResultado.setText(""+ formatea.format(resultado) + " ft");	
			}
			if (unidad1.equalsIgnoreCase("Pie") && unidad2.equalsIgnoreCase("Metro")) {
				
				double resultado = cantidadEscrita/3.281;
				//JOptionPane.showMessageDialog(null, "Es l");
				System.out.println("resultado " + resultado);
				txtResultado.setText(""+ formatea.format(resultado) + " mts");	
			}
			if (unidad1.equalsIgnoreCase("Metro") && unidad2.equalsIgnoreCase("Pulgada")) {
				
				double resultado = cantidadEscrita*39.37;
				//JOptionPane.showMessageDialog(null, "Es l");
				System.out.println("resultado " + resultado);
				txtResultado.setText(""+ formatea.format(resultado) + " in");	
			}
			if (unidad1.equalsIgnoreCase("Pulgada") && unidad2.equalsIgnoreCase("Metro")) {
				
				double resultado = cantidadEscrita/39.37;
				//JOptionPane.showMessageDialog(null, "Es l");
				System.out.println("resultado " + resultado);
				txtResultado.setText(""+ formatea.format(resultado) + " mts");	
			}
			if (unidad1.equalsIgnoreCase("Metro") && unidad2.equalsIgnoreCase("MillaNautica")) {
				
				double resultado = cantidadEscrita/1852;
				//JOptionPane.showMessageDialog(null, "Es l");
				System.out.println("resultado " + resultado);
				txtResultado.setText(""+ formatea.format(resultado) + " nm");	
			}
			if (unidad1.equalsIgnoreCase("MillaNautica") && unidad2.equalsIgnoreCase("Metro")) {
				
				double resultado = cantidadEscrita*1852;
				//JOptionPane.showMessageDialog(null, "Es l");
				System.out.println("resultado " + resultado);
				txtResultado.setText(""+ formatea.format(resultado) + " mts");	
			}
			//"Kilometro", "Metro", "Milla", "Yarda", "Pie", "Pulgada", "MillaNautica"
			if (unidad1.equalsIgnoreCase("Milla") && unidad2.equalsIgnoreCase("Yarda")) {
				
				double resultado = cantidadEscrita*1760;
				//JOptionPane.showMessageDialog(null, "Es l");
				System.out.println("resultado " + resultado);
				txtResultado.setText(""+ formatea.format(resultado) + " yd");	
			}
			if (unidad1.equalsIgnoreCase("Yarda") && unidad2.equalsIgnoreCase("Milla")) {
				
				double resultado = cantidadEscrita/1760;
				//JOptionPane.showMessageDialog(null, "Es l");
				System.out.println("resultado " + resultado);
				txtResultado.setText(""+ formatea.format(resultado) + " mi");	
			}
			if (unidad1.equalsIgnoreCase("Milla") && unidad2.equalsIgnoreCase("Pie")) {
				
				double resultado = cantidadEscrita*5280;
				//JOptionPane.showMessageDialog(null, "Es l");
				System.out.println("resultado " + resultado);
				txtResultado.setText(""+ formatea.format(resultado) + " ft");	
			}
			if (unidad1.equalsIgnoreCase("Pie") && unidad2.equalsIgnoreCase("Milla")) {
				
				double resultado = cantidadEscrita/5280;
				//JOptionPane.showMessageDialog(null, "Es l");
				System.out.println("resultado " + resultado);
				txtResultado.setText(""+ formatea.format(resultado) + " mi");	
			}
			if (unidad1.equalsIgnoreCase("Milla") && unidad2.equalsIgnoreCase("Pulgada")) {
				
				double resultado = cantidadEscrita*63360;
				//JOptionPane.showMessageDialog(null, "Es l");
				System.out.println("resultado " + resultado);
				txtResultado.setText(""+ formatea.format(resultado) + " in");	
			}
			if (unidad1.equalsIgnoreCase("Pulgada") && unidad2.equalsIgnoreCase("Milla")) {
				
				double resultado = cantidadEscrita/63360;
				//JOptionPane.showMessageDialog(null, "Es l");
				System.out.println("resultado " + resultado);
				txtResultado.setText(""+ formatea.format(resultado) + " mi");	
			}
			if (unidad1.equalsIgnoreCase("Milla") && unidad2.equalsIgnoreCase("MillaNautica")) {
				
				double resultado = cantidadEscrita/1.151;
				//JOptionPane.showMessageDialog(null, "Es l");
				System.out.println("resultado " + resultado);
				txtResultado.setText(""+ formatea.format(resultado) + " nm");	
			}
			if (unidad1.equalsIgnoreCase("MillaNautica") && unidad2.equalsIgnoreCase("Milla")) {
				
				double resultado = cantidadEscrita*1.151;
				//JOptionPane.showMessageDialog(null, "Es l");
				System.out.println("resultado " + resultado);
				txtResultado.setText(""+ formatea.format(resultado) + " mi");	
			}
			//"Kilometro", "Metro", "Milla", "Yarda", "Pie", "Pulgada", "MillaNautica"
			if (unidad1.equalsIgnoreCase("Yarda") && unidad2.equalsIgnoreCase("Pie")) {
				
				double resultado = cantidadEscrita/3;
				//JOptionPane.showMessageDialog(null, "Es l");
				System.out.println("resultado " + resultado);
				txtResultado.setText(""+ formatea.format(resultado) + " ft");	
			}
			if (unidad1.equalsIgnoreCase("Pie") && unidad2.equalsIgnoreCase("Yarda")) {
				
				double resultado = cantidadEscrita*1.151;
				//JOptionPane.showMessageDialog(null, "Es l");
				System.out.println("resultado " + resultado);
				txtResultado.setText(""+ formatea.format(resultado) + " yd");	
			}
			if (unidad1.equalsIgnoreCase("Yarda") && unidad2.equalsIgnoreCase("Pie")) {
				
				double resultado = cantidadEscrita*3;
				//JOptionPane.showMessageDialog(null, "Es l");
				System.out.println("resultado " + resultado);
				txtResultado.setText(""+ formatea.format(resultado) + " ft");	
			}
			if (unidad1.equalsIgnoreCase("Pie") && unidad2.equalsIgnoreCase("Yarda")) {
				
				double resultado = cantidadEscrita/3;
				//JOptionPane.showMessageDialog(null, "Es l");
				System.out.println("resultado " + resultado);
				txtResultado.setText(""+ formatea.format(resultado) + " yd");	
			}
			if (unidad1.equalsIgnoreCase("Yarda") && unidad2.equalsIgnoreCase("Pulgada")) {
				
				double resultado = cantidadEscrita*36;
				//JOptionPane.showMessageDialog(null, "Es l");
				System.out.println("resultado " + resultado);
				txtResultado.setText(""+ formatea.format(resultado) + " in");	
			}
			if (unidad1.equalsIgnoreCase("Pulgada") && unidad2.equalsIgnoreCase("Yarda")) {
				
				double resultado = cantidadEscrita/36;
				//JOptionPane.showMessageDialog(null, "Es l");
				System.out.println("resultado " + resultado);
				txtResultado.setText(""+ formatea.format(resultado) + " yd");	
			}
			if (unidad1.equalsIgnoreCase("Yarda") && unidad2.equalsIgnoreCase("MillaNautica")) {
				
				double resultado = cantidadEscrita/2025;
				//JOptionPane.showMessageDialog(null, "Es l");
				System.out.println("resultado " + resultado);
				txtResultado.setText(""+ formatea.format(resultado) + " nm");	
			}
			if (unidad1.equalsIgnoreCase("MillaNautica") && unidad2.equalsIgnoreCase("Yarda")) {
				
				double resultado = cantidadEscrita*2025;
				//JOptionPane.showMessageDialog(null, "Es l");
				System.out.println("resultado " + resultado);
				txtResultado.setText(""+ formatea.format(resultado) + " yd");	
			}
			// "Pie", "Pulgada", "MillaNautica"
			
			if (unidad1.equalsIgnoreCase("Pie") && unidad2.equalsIgnoreCase("Pulgada")) {
				
				double resultado = cantidadEscrita*12;
				//JOptionPane.showMessageDialog(null, "Es l");
				System.out.println("resultado " + resultado);
				txtResultado.setText(""+ formatea.format(resultado) + " in");	
			}
			if (unidad1.equalsIgnoreCase("Pulgada") && unidad2.equalsIgnoreCase("Pie")) {
				
				double resultado = cantidadEscrita/12;
				//JOptionPane.showMessageDialog(null, "Es l");
				System.out.println("resultado " + resultado);
				txtResultado.setText(""+ formatea.format(resultado) + " ft");	
			}
			if (unidad1.equalsIgnoreCase("Pie") && unidad2.equalsIgnoreCase("MillaNautica")) {
				double resultado = cantidadEscrita/6076;
				//JOptionPane.showMessageDialog(null, "Es l");
				System.out.println("resultado " + resultado);
				txtResultado.setText(""+ formatea.format(resultado) + " nm");	
			}
			if (unidad1.equalsIgnoreCase("MillaNautica") && unidad2.equalsIgnoreCase("Pie")) {
				
				double resultado = cantidadEscrita*6076;
				//JOptionPane.showMessageDialog(null, "Es l");
				System.out.println("resultado " + resultado);
				txtResultado.setText(""+ formatea.format(resultado) + " ft");
			}
			if (unidad1.equalsIgnoreCase("Pulgada") && unidad2.equalsIgnoreCase("MillaNautica")) {
				double resultado = cantidadEscrita/72910;
				//JOptionPane.showMessageDialog(null, "Es l");
				System.out.println("resultado " + resultado);
				txtResultado.setText(""+ formatea.format(resultado) + " nm");	
			}
			if (unidad1.equalsIgnoreCase("MillaNautica") && unidad2.equalsIgnoreCase("Pulgada")) {
				
				double resultado = cantidadEscrita*72910;
				//JOptionPane.showMessageDialog(null, "Es l");
				System.out.println("resultado " + resultado);
				txtResultado.setText(""+ formatea.format(resultado) + " in");
			}
			
		}else {
			JOptionPane.showMessageDialog(null, "Al ser iguales UM seleccionadas, el valor a calcular siempre sera igual al valor ingresado."
					+ " Por favor seleccione otro UM para calcular");
			limpiar();
		}
		
		
		
	}
	private void limpiar() {
		txtCantidad.setText("");
		txtResultado.setText("");
		txtCantidad.requestFocus();
		
	}
}
